{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport { isNumeric } from \"rxjs/util/isNumeric\";\nimport { getPosition } from \"suncalc\";\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Shuttermanager extends utils.Adapter {\n\n\tprivate latitude = 0;\n\tprivate longitude = 0;\n\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"shuttermanager\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Initialize your adapter here\n\t\tthis.getForeignObject(\"system.config\", (err, state) => {\n\t\t\tif (!err) {\n\t\t\t\tthis.longitude = state?.common.longitude;\n\t\t\t\tthis.latitude = state?.common.latitude;\n\t\t\t}\n\t\t});\n\n\t\tthis.initEnums();\n\n\t\tthis.setInterval(this.check.bind(this), 5000);\n\n\t\t// The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n\t\t// this.config:\n\n\t\t/*\n\t\tFor every state in the system there has to be also an object of type state\n\t\tHere a simple template for a boolean variable named \"testVariable\"\n\t\tBecause every adapter instance uses its own unique namespace variable names can't collide with other adapters variables\n\t\t*/\n\t\tawait this.setObjectNotExistsAsync(\"testVariable\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"testVariable\",\n\t\t\t\ttype: \"boolean\",\n\t\t\t\trole: \"indicator\",\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\t// In order to get state updates, you need to subscribe to them. The following line adds a subscription for our variable we have created above.\n\t\tthis.subscribeStates(\"testVariable\");\n\t\t// You can also add a subscription for multiple states. The following line watches all states starting with \"lights.\"\n\t\t// this.subscribeStates(\"lights.*\");\n\t\t// Or, if you really must, you can also watch all states. Don't do this if you don't need to. Otherwise this will cause a lot of unnecessary load on the system:\n\t\t// this.subscribeStates(\"*\");\n\n\t\t/*\n\t\t\tsetState examples\n\t\t\tyou will notice that each setState will cause the stateChange event to fire (because of above subscribeStates cmd)\n\t\t*/\n\t\t// the variable testVariable is set to true as command (ack=false)\n\t\tawait this.setStateAsync(\"testVariable\", true);\n\n\t\t// same thing, but the value is flagged \"ack\"\n\t\t// ack should be always set to true if the value is received from or acknowledged from the target system\n\t\tawait this.setStateAsync(\"testVariable\", { val: true, ack: true });\n\n\t\t// same thing, but the state is deleted after 30s (getState will return null afterwards)\n\t\tawait this.setStateAsync(\"testVariable\", { val: true, ack: true, expire: 30 });\n\n\t\t// examples for the checkPassword/checkGroup functions\n\t\tlet result = await this.checkPasswordAsync(\"admin\", \"iobroker\");\n\t\tthis.log.info(\"check user admin pw iobroker: \" + result);\n\n\t\tresult = await this.checkGroupAsync(\"admin\", \"admin\");\n\t\tthis.log.info(\"check group user admin group admin: \" + result);\n\t}\n\n\tprivate initEnums(): void {\n\t\tthis.setObjectNotExistsAsync(\"enum.functions.schutters\", {\n\t\t\tcommon: {\n\t\t\t\tname: {\n\t\t\t\t\t\"en\": \"Shutters\",\n\t\t\t\t\t\"de\": \"Rolll\u00E4den\",\n\t\t\t\t\t\"ru\": \"\u0437\u0430\u0442\u0432\u043E\u0440\u044B\",\n\t\t\t\t\t\"pt\": \"Portas de madeira\",\n\t\t\t\t\t\"nl\": \"Kappen\",\n\t\t\t\t\t\"fr\": \"Volets\",\n\t\t\t\t\t\"it\": \"Persiane\",\n\t\t\t\t\t\"es\": \"Persianas\",\n\t\t\t\t\t\"pl\": \"Szablon\",\n\t\t\t\t\t\"zh-cn\": \"\u7A7F\u68AD\"\n\t\t\t\t}\n\t\t\t}\n\t\t} as ioBroker.EnumObject)\n\t}\n\n\tprivate async check(): Promise<void> {\n\t\tthis.checkSunProtection();\n\t}\n\n\tprivate async checkSunProtection(): Promise<void> {\n\t\tif (this.config.tempSensorId == undefined) {\n\t\t\tthis.log.warn(\"Temperature sensor id is not set!\");\n\t\t\treturn;\n\t\t}\n\t\tconst tempSensor = await this.getForeignStateAsync(this.config.tempSensorId);\n\t\tif (tempSensor == undefined || tempSensor.val == undefined || !isNumeric(tempSensor.val)) {\n\t\t\tthis.log.warn(\"Can't read current temperature from sensor with id \" + this.config.tempSensorId);\n\t\t\treturn;\n\t\t}\n\t\tthis.log.info(this.config.sunProtectionIfTempIsHigherThan + \",\" + (tempSensor.val + Number(1)))\n\t\tif (this.config.sunProtectionIfTempIsHigherThan > (tempSensor.val + Number(1))) {\n\t\t\tthis.resetAllSunProtections();\n\t\t\treturn;\n\t\t}\n\t\tif (this.config.sunProtectionIfTempIsHigherThan > tempSensor.val) {\n\t\t\treturn;\n\t\t}\n\t\tconst sunPositionResult = getPosition(new Date(), this.latitude, this.longitude);\n\t\tconst altitude = sunPositionResult.altitude * 180 / Math.PI\n\t\tconst azimuth = 180 + sunPositionResult.azimuth * 180 / Math.PI\n\n\t\tthis.log.info(altitude + \",\" + azimuth);\n\n\t\tif (altitude < this.config.minimumAltitude) {\n\t\t\tthis.resetAllSunProtections();\n\t\t\treturn;\n\t\t}\n\t\tlet i = 0;\n\t\twhile (i < this.config.sunProtectionShutters.length) {\n\t\t\tconst shutter = await this.getForeignStateAsync(this.config.sunProtectionShutters[i].shutterId);\n\t\t\tthis.log.info(this.config.sunProtectionShutters[i].sunProtectionUntil +\"(\"+JSON.stringify(shutter)+\")\"+ \",\"+azimuth);\n\t\t\tif (this.config.sunProtectionShutters[i].sunProtectionFrom < azimuth && this.config.sunProtectionShutters[i].sunProtectionUntil > azimuth) {\n\t\t\t\tif (shutter?.val == 0) {\n\t\t\t\t\tthis.setForeignStateAsync(this.config.sunProtectionShutters[i].shutterId, this.config.sunProtectionShutters[i].sunProtectionPosition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (shutter?.val == this.config.sunProtectionShutters[i].sunProtectionPosition) {\n\t\t\t\t\tthis.setForeignStateAsync(this.config.sunProtectionShutters[i].shutterId, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\n\n\t}\n\tprivate async resetAllSunProtections(): Promise<void> {\n\t\tlet i = 0;\n\t\twhile (i < this.config.sunProtectionShutters.length) {\n\t\t\tconst shutter = await this.getForeignStateAsync(this.config.sunProtectionShutters[i].shutterId);\n\t\t\tif (shutter?.val == this.config.sunProtectionShutters[i].sunProtectionPosition) {\n\t\t\t\tthis.setForeignStateAsync(this.config.sunProtectionShutters[i].shutterId, 0);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\n\n\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\t// clearTimeout(timeout1);\n\t\t\t// clearTimeout(timeout2);\n\t\t\t// ...\n\t\t\t// clearInterval(interval1);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Shuttermanager(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Shuttermanager())();\n}"],
  "mappings": "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",
  "names": []
}
